---
const url = Astro.url;

function getSite() {
    const pathnameSplit = url.pathname.split("/");
    const pathnameLength = pathnameSplit.length;
    if (pathnameLength <= 1) {
        return "Home";
    } else if (pathnameLength <= 2) {
        return "Felix";
    } else if (pathnameSplit.includes("work")) {
        return "Works";
    } else {
        return "Blog";
    }
}

const site = getSite();
const { stickyHeader } = Astro.props;
---

<>
    <header
        class=`${stickyHeader ? 'sticky' : 'relative'} top-0 py-8 px-4 m-0 z-10 flex justify-evenly items-center overflow-hidden bg-gradient-to-t from-slate-50 to-slate-100/20`
        id="navigation"
    >
        <h1 class="text-3xl font-bold uppercase w-3/12" id="navigation-title">
            {site}
        </h1>

        <button class="md:hidden w-16 h-16 rounded-2xl p-2 border-2">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-6 h-6"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
            </svg>
        </button>
        <nav
            class="md:w-3/12 relative text-gray-900 dark:text-gray-100 font-sans
 rounded-4xl border-1 border-gray-300 dark:border-gray-700"
            id="navigation-menu"
            aria-labelledby="navigation-title"
            aria-describedby="navigation-description"
            role="navigation"
            aria-label="Main Navigation"
        >
            <div
                class="hidden relative md:flex justify-around backdrop-blur-sm bg-gray-200/40 dark:bg-gray-800/40 rounded-4xl py-4 px-8
 gap-8 z-10 bg-opacity-70 font-bold"
            >
                <div
                    class="absolute w-3/12 h-4/6 bg-gray-300 dark:bg-gray-700 top-2/12 left-0 rounded-4xl opacity-0"
                    id="navigation-menu-link-background"
                >
                </div>
                <a href="/" class="relative z-50 navigation-menu-link">Home</a>
                <a
                    href="/work"
                    class="relative z-50 navigation-menu-link active">Works</a
                >
                <a href="/blog" class="relative z-50 navigation-menu-link"
                    >Blog</a
                >
                <a href="/#contact" class="relative z-50 navigation-menu-link"
                    >Contact</a
                >
            </div>
        </nav>

        <div
            id="social-links"
            class="hidden md:flex flex-wrap md:w-3/12 justify-end text-xs md:text-sm translate-x-0"
        >
            <p
                class="w-full text-right font-bold text-gray-700 dark:text-gray-300"
            >
                Social Links:
            </p>
            <div class="flex justify-center space-x-4 font-bold">
                <a
                    href="https://www.linkedin.com/in/felix-antonio-cabello/"
                    class="relative z-50 hover:underline">IN</a
                >
                <a
                    href="https://www.facebook.com/TheHeredero.antockgarmen.dia"
                    class="relative z-50 hover:underline">FB</a
                >
                <a
                    href="https://www.instagram.com/theheredero/"
                    class="relative z-50 hover:underline">IG</a
                >
                <a
                    href="https://github.com/Antonio476587"
                    class="relative z-50 hover:underline">GH</a
                >
            </div>
        </div>

        <script is:client>
            // Add your client-side JavaScript code here
            let lastScrollY = window.pageYOffset;

            gsap.timeline({
                scrollTrigger: {
                    trigger: "#navigation",
                    start: "top top",
                    end: "center top",
                    scrub: 1, // Smoothly sync with scroll
                },
            })
                .add("startTogether", "+=0")
                .to(
                    "#navigation-title",
                    {
                        duration: 0.5,
                        translateX: "-20%",
                        opacity: 0.1,
                        ease: "power2.inOut",
                    },
                    "startTogether",
                )
                .to(
                    "#social-links",
                    {
                        duration: 0.5,
                        translateX: "20%",
                        opacity: 0.1,
                        ease: "power2.inOut",
                    },
                    "startTogether",
                );

            const navigationMenu = document.getElementById("navigation-menu");
            const navigationMenuLinks = navigationMenu.querySelectorAll(
                ".navigation-menu-link",
            );
            const navigationMenuBackground = document.getElementById(
                "navigation-menu-link-background",
            );
            navigationMenuLinks.forEach((link) => {
                link.addEventListener("mouseover", () => {
                    gsap.to(navigationMenuBackground, {
                        duration: 0.2,
                        width: link.clientWidth + link.clientWidth * 0.7,
                        left: link.offsetLeft - link.clientWidth * 0.4,
                        ease: "power2.inOut",
                    });
                });
            });

            function setInActiveLink() {
                const navigationMenuLinkActive =
                    navigationMenu.querySelectorAll(".navigation-menu-link");
                let activeLink = null;

                navigationMenuLinkActive.forEach((link) => {
                    if (link.href.includes(window.location.pathname)) {
                        link.classList.add("active");
                        activeLink = link;
                    } else {
                        link.classList.remove("active");
                    }
                });

                gsap.to(navigationMenuBackground, {
                    duration: 0.5,
                    width:
                        activeLink.clientWidth + activeLink.clientWidth * 0.8,
                    left: activeLink.offsetLeft - activeLink.clientWidth * 0.4,
                    ease: "power2.inOut",
                    opacity: 1,
                });
            }
            window.addEventListener("load", () => {
                setInActiveLink();
            });
            navigationMenu.addEventListener("mouseleave", () => {
                setInActiveLink();
            });

            window.addEventListener("scroll", () => {
                let currentScrollY = window.pageYOffset;

                if (currentScrollY > lastScrollY) {
                    // Scrolling down
                    console.log("scrolling down");
                    // Hide navigation here
                    gsap.to("#navigation-menu", {
                        duration: 0.5,
                        translateY: "-6rem",
                    });
                } else {
                    // Scrolling up
                    console.log("scrolling up");
                    // Show navigation here
                    gsap.to("#navigation-menu", {
                        duration: 0.5,
                        translateY: "0%",
                    });
                }

                lastScrollY = currentScrollY;
            });
        </script>
    </header>
</>

---
import MenuNFT from "./MenuNFT.tsx";
import LegendaryNFT from "./LegendaryNFT.astro";
---

<>
    <div
        class="contact relative gap-8 p-8 lg:p-16 translate-y-2 rounded-3xl bg-white z-10"
        id="contact"
        role="contact"
    >
        <MenuNFT client:load />

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Left Contact Form -->
            <div
                class="contact p-8 rounded-lg shadow-sm border border-gray-100"
            >
                <h2 class="text-3xl font-medium mb-8 text-gray-900">
                    It's all starts with hello..
                </h2>

                <form id="contact-form" class="flex flex-col space-y-5">
                    <div class="flex flex-col">
                        <label class="mb-1 font-medium text-gray-700"
                            >Name</label
                        >
                        <input
                            id="name"
                            name="name"
                            type="text"
                            placeholder="Charlie Edward"
                            required
                            class="px-4 py-3 border border-gray-300 rounded-md text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors"
                        />
                    </div>

                    <div class="flex flex-col">
                        <label class="mb-1 font-medium text-gray-700"
                            >Contact email</label
                        >
                        <input
                            id="email"
                            name="email"
                            type="email"
                            placeholder="charlie.edward@email.app"
                            required
                            class="px-4 py-3 border border-gray-300 rounded-md text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors"
                        />
                    </div>

                    <div class="flex flex-col">
                        <label class="mb-1 font-medium text-gray-700"
                            >Additional info</label
                        >
                        <textarea
                            id="message"
                            name="message"
                            placeholder="Be as detailed as possible..."
                            required
                            class="px-4 py-3 border border-gray-300 rounded-md min-h-[120px] resize-y text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors"
                        ></textarea>
                    </div>

                    <button
                        type="submit"
                        id="submit-btn"
                        class="w-fit bg-white border border-black rounded-full px-7 py-3 font-medium cursor-pointer transition-colors hover:bg-black hover:text-white disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                        <span class="btn-text">SEND MESSAGE</span>
                    </button>
                </form>

                <!-- NFT Gift -->
                <LegendaryNFT />
                <!-- Toast notification -->
                <div
                    id="toast"
                    class="absolute top-1/3 left-1/2 px-6 py-3 rounded-lg shadow-lg -translate-x-2/4 opacity-0 transform transition duration-300 z-50"
                >
                    <p id="toast-message" class="text-lg font-medium"></p>
                </div>
            </div>

            <!-- Right FAQ -->
            <div class="faq bg-gray-50 p-8 rounded-lg">
                <h2 class="mt-0 text-2xl font-medium mb-2 text-gray-900">
                    Frequently asked questions
                </h2>
                <p class="text-gray-600 mb-8">
                    Here are the answers to the most common questions.
                </p>

                <div class="accordion space-y-0">
                    <div class="item border-b border-gray-200">
                        <button
                            class="accordion-btn w-full bg-transparent border-none text-left text-base py-4 flex justify-between items-center cursor-pointer text-gray-900 hover:text-gray-700 transition-colors"
                            data-target="faq-1"
                        >
                            How much do your services cost?
                            <span class="accordion-icon ml-2 text-xl font-light"
                                >+</span
                            >
                        </button>
                        <div
                            id="faq-1"
                            class="content hidden pb-4 text-gray-600 text-sm leading-relaxed"
                        >
                            The pricing depends on the scope and complexity of
                            your project. I offer competitive rates and can
                            provide detailed quotes after understanding your
                            specific requirements.
                        </div>
                    </div>

                    <div class="item border-b border-gray-200">
                        <button
                            class="accordion-btn w-full bg-transparent border-none text-left text-base py-4 flex justify-between items-center cursor-pointer text-gray-900 hover:text-gray-700 transition-colors"
                            data-target="faq-2"
                        >
                            Do you offer your services separately?
                            <span class="accordion-icon ml-2 text-xl font-light"
                                >+</span
                            >
                        </button>
                        <div
                            id="faq-2"
                            class="content hidden pb-4 text-gray-600 text-sm leading-relaxed"
                        >
                            Yes, I can tailor services individually based on
                            your needs. Whether you need design, development, or
                            consulting, I can work with you on specific aspects
                            of your project.
                        </div>
                    </div>

                    <div class="item border-b border-gray-200">
                        <button
                            class="accordion-btn w-full bg-transparent border-none text-left text-base py-4 flex justify-between items-center cursor-pointer text-gray-900 hover:text-gray-700 transition-colors"
                            data-target="faq-3"
                        >
                            Can you transfer my Wordpress site over to Astrojs?
                            <span class="accordion-icon ml-2 text-xl font-light"
                                >+</span
                            >
                        </button>
                        <div
                            id="faq-3"
                            class="content hidden pb-4 text-gray-600 text-sm leading-relaxed"
                        >
                            Absolutely, I specialize in migrating WordPress
                            sites to modern frameworks like Astro. I'll ensure
                            your content, SEO, and performance are maintained or
                            improved during the transition.
                        </div>
                    </div>

                    <div class="item border-b border-gray-200">
                        <button
                            class="accordion-btn w-full bg-transparent border-none text-left text-base py-4 flex justify-between items-center cursor-pointer text-gray-900 hover:text-gray-700 transition-colors"
                            data-target="faq-4"
                        >
                            How can I get support?
                            <span class="accordion-icon ml-2 text-xl font-light"
                                >+</span
                            >
                        </button>
                        <div
                            id="faq-4"
                            class="content hidden pb-4 text-gray-600 text-sm leading-relaxed"
                        >
                            You can contact us via email, phone, or through this
                            contact form. We typically respond within 24 hours
                            and offer ongoing support for all our projects.
                        </div>
                    </div>

                    <div class="item border-b border-gray-200">
                        <button
                            class="accordion-btn w-full bg-transparent border-none text-left text-base py-4 flex justify-between items-center cursor-pointer text-gray-900 hover:text-gray-700 transition-colors"
                            data-target="faq-5"
                        >
                            Can you help with my existing React/Astrojs project?
                            <span class="accordion-icon ml-2 text-xl font-light"
                                >+</span
                            >
                        </button>
                        <div
                            id="faq-5"
                            class="content hidden pb-4 text-gray-600 text-sm leading-relaxed"
                        >
                            Yes, I can work on existing projects to add
                            features, fix bugs, optimize performance, or help
                            with maintenance. I'm experienced with both React
                            and Astro ecosystems.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script is:client>
        // NFT gift
        const card = document.getElementById("legendaryCard");
        const img = document.getElementById("legendaryImg");
        const flash = document.getElementById("flash");
        const overlay = document.getElementById("reveal");

        function burst(centerX, centerY) {
            for (let i = 0; i < 60; i++) {
                const p = document.createElement("div");
                p.className = "burst-particle";
                p.style.left = centerX + "px";
                p.style.top = centerY + "px";
                overlay.prepend(p);
                const angle = Math.random() * Math.PI * 2;
                const dist = 100 + Math.random() * 300;
                gsap.to(p, {
                    duration: 1.8 + Math.random(),
                    x: Math.cos(angle) * dist + 1,
                    y: Math.sin(angle) * dist + 1,
                    scale: 0,
                    opacity: 0,
                    ease: "power3.out",
                    onComplete: () => {
                        p.remove();
                    },
                });
            }
        }

        async function playLegendaryReveal(url) {
            if (url) img.src = url;
            overlay.style.display = "flex";
            flash.style.opacity = 0;
            gsap.set(card, { scale: 0.2, opacity: 0, rotateY: 180 });

            const tl = gsap.timeline();
            tl.to(flash, { opacity: 1, duration: 0.3 });
            tl.to(flash, { opacity: 0, duration: 0.3 });
            tl.to(
                card,
                { opacity: 1, scale: 1.2, duration: 0.8, ease: "back.out(2)" },
                "-=0.2",
            );
            tl.to(
                card,
                { rotateY: 0, duration: 0.8, ease: "power2.out" },
                "-=0.6",
            );
            tl.call(burst, [window.innerWidth / 2, window.innerHeight / 2]);
            tl.to(card, { scale: 1, duration: 0.2 });
            tl.to(card, { scale: 0.3, opacity: 0, duration: 0.7, delay: 3 });

            await tl;
            setTimeout(() => {
                overlay.style.display = "none";
            }, 2500);
        }

        function downloadNFT() {
            const url = "https://example.com/nft";
            const link = document.createElement("a");
            link.href = img.src;
            link.download = "nft.png";
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // FAQ Accordion functionality
        document.addEventListener("DOMContentLoaded", function () {
            const accordionButtons =
                document.querySelectorAll(".accordion-btn");

            accordionButtons.forEach((button) => {
                button.addEventListener("click", function () {
                    const targetId = this.getAttribute("data-target");
                    const content = document.getElementById(targetId);
                    const icon = this.querySelector(".accordion-icon");

                    // Close all other accordions
                    accordionButtons.forEach((otherButton) => {
                        if (otherButton !== this) {
                            const otherId =
                                otherButton.getAttribute("data-target");
                            const otherContent =
                                document.getElementById(otherId);
                            const otherIcon =
                                otherButton.querySelector(".accordion-icon");

                            if (
                                otherContent &&
                                !otherContent.classList.contains("hidden")
                            ) {
                                otherContent.classList.add("hidden");
                                otherIcon.textContent = "+";
                            }
                        }
                    });

                    // Toggle current accordion
                    if (content.classList.contains("hidden")) {
                        content.classList.remove("hidden");
                        icon.textContent = "−";
                    } else {
                        content.classList.add("hidden");
                        icon.textContent = "+";
                    }
                });
            });

            // Contact Form functionality
            const contactForm = document.getElementById("contact-form");
            const submitBtn = document.getElementById("submit-btn");
            const btnText = document.querySelector(".btn-text");
            const toast = document.getElementById("toast");
            const toastMessage = document.getElementById("toast-message");

            function showToast(message, type = "success") {
                toastMessage.textContent = message;

                if (type === "success") {
                    toast.classList.remove("bg-red-500");
                    toast.classList.add("bg-green-500");
                } else {
                    toast.classList.remove("bg-green-500");
                    toast.classList.add("bg-red-500");
                }

                // Show toast
                toast.style.transform = "translateY(-100%)";
                toast.style.opacity = "1";

                // Hide toast after 3 seconds
                setTimeout(() => {
                    toast.style.transform = "translateY(100%)";
                    toast.style.opacity = "0";
                }, 3000);
            }

            function validateEmail(email) {
                const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return re.test(email);
            }

            contactForm.addEventListener("submit", async function (e) {
                e.preventDefault();

                const formData = new FormData(contactForm);
                const name = formData.get("name").trim();
                const email = formData.get("email").trim();
                const message = formData.get("message").trim();

                // Client-side validation
                if (!name || name.length < 2) {
                    showToast(
                        "Please enter a valid name (at least 2 characters)",
                        "error",
                    );
                    return;
                }

                if (!email || !validateEmail(email)) {
                    showToast("Please enter a valid email address", "error");
                    return;
                }

                if (!message || message.length < 10) {
                    showToast(
                        "Please enter a message (at least 10 characters)",
                        "error",
                    );
                    return;
                }

                // Disable button and show loading state
                submitBtn.disabled = true;
                btnText.textContent = "SENDING...";

                try {
                    // Simulate API call (replace with actual endpoint)
                    const response = await fetch("/api/contact", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({
                            name,
                            email,
                            message,
                            date: new Date().toISOString(),
                        }),
                    });

                    if (response.ok) {
                        showToast(
                            "Message sent successfully! We'll get back to you soon.",
                            "success",
                        );

                        await new Promise((r) => setTimeout(r, 500));
                        playLegendaryReveal();
                        downloadNFT();
                        contactForm.reset();
                    } else {
                        throw new Error("Failed to send message");
                    }
                } catch (error) {
                    console.error("Error sending message:", error);
                    showToast(
                        "Failed to send message. Please try again later.",
                        "error",
                    );
                } finally {
                    // Re-enable button
                    submitBtn.disabled = false;
                    btnText.textContent = "SEND MESSAGE";
                }
            });
        });
    </script>
</>

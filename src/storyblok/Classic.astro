---
const { blok } = Astro.props;
import { storyblokEditable } from "@storyblok/astro";
import { richTextResolver } from "@storyblok/richtext";

const { render } = richTextResolver();

// Extract image URLs from rich text if needed
const visualImages = blok.visuals?.content || [];
---

<style>
    :root {
        --primary-color: #1173d4;
        --secondary-color: #f0f2f4;
        --text-primary: #111418;
        --text-secondary: #617589;
    }

    .hero-image {
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
    }

    .visual-card {
        transition: transform 0.3s ease;
    }

    .visual-card:hover {
        transform: scale(1.05);
    }

    .visual-image {
        aspect-ratio: 4/3;
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
    }
</style>

<main
    {...storyblokEditable(blok)}
    class="flex-grow container mx-auto px-6 py-12"
>
    <div class="max-w-4xl mx-auto">
        <!-- Hero Image -->
        <div
            class="w-full h-96 rounded-xl shadow-lg hero-image mb-12"
            style={`background-image: url('${blok.thumbnail?.filename || ""}')`}
        >
        </div>

        <!-- Title and Description -->
        <div class="text-center mb-12">
            <h1
                class="text-4xl md:text-5xl font-bold text-[var(--text-primary)] mb-4"
            >
                {blok.title}
            </h1>
            <div class="text-lg text-[var(--text-secondary)] max-w-2xl mx-auto">
                <Fragment set:html={render(blok.short_description)} />
            </div>
        </div>

        <!-- Detailed Description -->
        <div class="border-t border-gray-200 pt-8 mb-12">
            <div
                class="text-base text-[var(--text-secondary)] leading-relaxed prose prose-lg max-w-none"
            >
                <Fragment set:html={render(blok.detailed_description)} />
            </div>
        </div>

        <!-- Visuals Gallery (if images are provided) -->
        {
            visualImages.length > 0 && (
                <div class="mb-12">
                    <h2 class="text-3xl font-bold text-[var(--text-primary)] mb-8 text-center">
                        Visuals
                    </h2>
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                        {visualImages.map((image) => (
                            <div class="bg-white rounded-xl shadow-md overflow-hidden visual-card">
                                <div
                                    class="visual-image h-48"
                                    style={`background-image: url('${image.filename || ""}')`}
                                />
                            </div>
                        ))}
                    </div>
                </div>
            )
        }

        <!-- CTA Button -->
        {
            blok.external_link?.url && (
                <div class="text-center">
                    <a
                        href={blok.external_link.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="inline-block bg-[var(--primary-color)] text-white font-bold text-lg py-4 px-10 rounded-lg hover:bg-blue-700 transition-colors shadow-lg hover:shadow-xl transform hover:scale-105 duration-300"
                    >
                        View Project
                    </a>
                </div>
            )
        }
    </div>
</main>
